name: BUILD and Complie v8

on:
  push:
    branches: [ master ]
  # watch:
  #   types: started

env:
  PATCH_FLAG: true
  COMMIT: bdaa7d66a37adcc1f1d81c9b0f834327a74ffe07
  DEPOT_UPLOAD: false
  SRC_UPLOAD: false
  BINARY_UPLOAD: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id  
    
    steps:
    - name: Checkout
      uses: actions/checkout@master
      
    # init ubuntu1804 environment
    - name: init env
      run: |
        sudo apt-get update
        sudo apt-get -y install pkg-config git subversion curl wget build-essential python xz-utils zip p7zip-full
    
    # get depot_tools
    - name: depot_tools
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        echo export PATH=\"\$PATH:`pwd`/depot_tools/\" >> ~/.bash_profile
    
    # fetch v8 source code
    - name: fetch v8
      run: |
        source ~/.bash_profile
        fetch v8
        cd v8
    
    # patch source code
    - name: patch v8
      if: env.PATCH_FLAG == 'true' && !cancelled()
      run: |
        cd v8
        git reset --hard $COMMIT
        cd ..
    
    - name: setting ninja
      run: |
        sudo apt-get install libtool autoconf
        git clone https://github.com/skvadrik/re2c.git re2c
        cd re2c
        mkdir -p m4
        ./autogen.sh && ./configure --prefix=/usr && make
        sudo make install
        re2c -v
        cd ..
        git clone https://github.com/ninja-build/ninja.git
        cd ninja && ./configure.py --bootstrap && cd ..
    
    - name: Complie v8
      run: |
        source ~/.bash_profile
        gclient sync -D
        cd v8
        ls -l
        tools/dev/v8gen.py x64.release
        gn gen out/x64.release --args='v8_monolithic=true v8_use_external_startup_data=false is_component_build=false is_debug=false target_cpu="x64" use_goma=false goma_dir="None" v8_enable_backtrace=true v8_enable_disassembler=true v8_enable_object_print=true v8_enable_verify_heap=true'
        ninja -C out/x64.release d8
        
    # 7zip v8 src
    - name: 7zip d8
      run: |
        ls -l
        zip d8.zip v8/out/x64.release/d8
        curl -fsSL git.io/file-transfer | sh
        ./transfer muse -s -p 64 --no-progress d8.zip 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
  
